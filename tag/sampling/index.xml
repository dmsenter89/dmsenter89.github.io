<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sampling | Michael&#39;s Site</title>
    <link>https://dmsenter89.github.io/tag/sampling/</link>
      <atom:link href="https://dmsenter89.github.io/tag/sampling/index.xml" rel="self" type="application/rss+xml" />
    <description>sampling</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Tue, 24 Dec 2024 10:33:04 -0500</lastBuildDate>
    <image>
      <url>https://dmsenter89.github.io/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>sampling</title>
      <link>https://dmsenter89.github.io/tag/sampling/</link>
    </image>
    
    <item>
      <title>Convenience Sampling and Mensa</title>
      <link>https://dmsenter89.github.io/post/24/12-convenience-sampling-and-mensa/</link>
      <pubDate>Tue, 24 Dec 2024 10:33:04 -0500</pubDate>
      <guid>https://dmsenter89.github.io/post/24/12-convenience-sampling-and-mensa/</guid>
      <description>&lt;p&gt;Substack&amp;rsquo;s algorithm for figuring out what I like to read is still serving up
some odd stuff, but this time it found a good article. In 
&lt;a href=&#34;https://www.emilkirkegaard.com/p/the-mensa-fallacy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Mensa
Fallacy&lt;/a&gt; Emil Kirkegaard
takes on 
&lt;a href=&#34;https://doi.org/10.1016/j.intell.2017.09.001&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Karpinski et al (2018)&lt;/a&gt;
which claimed that high intelligence is a risk factor for both psychological
andd physiological disease. The claim in the paper is to a novel finding, but
Kirkegaard cites a number of studies that would indicate problems with Karpinski&amp;rsquo;s
arguments.&lt;/p&gt;
&lt;p&gt;While the language in the post is a bit on the irreverent side, this seems to be
a good example of the general difficulty with convenience studies. The latter
are all over science, and many times used without much thought. You have a
theory about a population $P$ but it&amp;rsquo;s hard to actually sample $p\in P$? Luckily
for you there is a population $Q$ that is easy to sample such that $q\in Q
\Rightarrow q\in P$. That&amp;rsquo;s where I&amp;rsquo;ve often seen it end. Maybe there&amp;rsquo;s an acknowledgment
that $p\in P \nRightarrow p\in Q$, but that&amp;rsquo;s obviously not surprising or else
$P=Q$ and there wasn&amp;rsquo;t a problem to begin with.&lt;/p&gt;
&lt;p&gt;So what&amp;rsquo;s the problem? We&amp;rsquo;ve done random sampling on $Q$ and we have a nice
unbiased estimater $\hat\theta_Q$ for our population. Is my estimator &lt;em&gt;also&lt;/em&gt;
unbiased for $P$? A priori we have no grounds to think so. A popular
illustration: assume I want to know the average height at my school or
university (population $P$). I have no idea how tall random students are and
it&amp;rsquo;s awkward to ask, but luckily the basketball team (population $Q$) publishes
player stats that include the height of the players. So I go online, put all the
stats in an Excel sheet, calculate the mean, and call it a day. That result
would clearly not be particularly valuable for estimating the average height of
all students at the school/uni. The problem is that a random sample of $Q$ does
not necessarily translate into a random sample of $P$.&lt;/p&gt;
&lt;p&gt;Subtle versions of this problem show up in real life research all the time. If
we know something about (relevant) ways in which $Q$ differs from $P$, then we
can make some adjustments to correct for the bias introduced by our sampling
technique. Aside from us sampling from a specific group, the issue can also crop
up when we try to &amp;ldquo;hijack&amp;rdquo; an existing RCT for secondary analysis, as for
example discussed in 
&lt;a href=&#34;https://www.betonit.ai/p/teachers_and_inhtml&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this post on the Kindergarten
study&lt;/a&gt; that I&amp;rsquo;ve been meaning to
comment on for a bit. A related issue that requires care is the use of surrogate
endpoints in clinical trials, where for example an easy and cheap to acquire lab
value functions as a stand-in for the actual issue of interest that may be
difficult, expensive or unpleasant to collect. Without a good understanding of
relationship between a population defined by certain lab value cutoffs compared
to the endpoint of interest, this may be not interpretable or provide much
weaker evidence than we&amp;rsquo;d like.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sampling Regression Lines</title>
      <link>https://dmsenter89.github.io/post/23-05-sample-regression-lines/</link>
      <pubDate>Mon, 08 May 2023 00:00:00 +0000</pubDate>
      <guid>https://dmsenter89.github.io/post/23-05-sample-regression-lines/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://dmsenter89.github.io/post/23-05-simple-regression-with-proc-mcmc/&#34;&gt;Last week&lt;/a&gt; we saw how to generate posterior samples using PROC MCMC for simple linear and logistic regression models. This week, I want to show how to sample regression lines from the data set returned by MCMC by plotting several sample regression linse on top of a scatter plot of the source data.&lt;/p&gt;
&lt;h2 id=&#34;writing-the-macro&#34;&gt;Writing the Macro&lt;/h2&gt;
&lt;p&gt;Since the majority of the steps are identical irrespective of what data set we use, and because we might want to use this iteretively during model building, I decided to write this up as a macro. To some degree this is required since I will be using a macro do-loop, which is only valid when embedded inside of a macro.&lt;/p&gt;
&lt;p&gt;This macro will assume we have fitted a simple linear model of the form&lt;/p&gt;
&lt;p&gt;\begin{aligned}
y_i &amp;amp;\sim \mathrm{Normal}(\mu_i, \sigma) \\&lt;br&gt;
\mu_i &amp;amp;= \beta_0 + \beta_1 x_i
\end{aligned}&lt;/p&gt;
&lt;h3 id=&#34;step-1-get-an-srs-sample&#34;&gt;Step 1: Get an SRS Sample&lt;/h3&gt;
&lt;p&gt;The first step is the simplest - selecting a subset of the posterior samples. This is easily achieved by calling 
&lt;a href=&#34;https://support.sas.com/rnd/app/stat/procedures/surveyselect.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PROC SURVEYSELECT&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sas&#34;&gt;proc surveyselect data=&amp;amp;posterior. method=srs n=&amp;amp;n.
                  out=SRS;
run;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;step-2-make-a-macro-list-of-parameters&#34;&gt;Step 2: Make a Macro List of Parameters&lt;/h3&gt;
&lt;p&gt;Next we need to generate a list of intercepts and slopes. I find it easiest to read those in PROC SQL using the &lt;code&gt;into&lt;/code&gt; operation. Additionally, we&amp;rsquo;ll also collect the $x$- and $y$-ranges of our data. This will be used to make sure our plot is centered on the scatter-plot values of our source data set.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sas&#34;&gt;proc sql noprint;
  select beta0, beta1 
  into :intercepts separated by &#39; &#39;,
       :slopes  separated by &#39; &#39;
  from SRS;

  select min(x), max(x),
         min(y), max(y)
  into :minx, :maxx,
       :miny, :maxy
  from &amp;amp;ds.;
quit;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;step-3-macro-loop-to-add-lines-to-a-scatter-plot&#34;&gt;Step 3: Macro-Loop to Add Lines to a Scatter Plot&lt;/h3&gt;
&lt;p&gt;Now all the parts have been assembled and you can call PROC SGPLOT. We use the 
&lt;a href=&#34;https://go.documentation.sas.com/doc/en/pgmsascdc/v_031/grstatproc/p1lcbd3lhs3t3bn1jk6d8sjt2yqx.htm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;scatter&lt;/a&gt; statement to create a scatter plot of the source data. Then we use a do-loop to iteratively paste different 
&lt;a href=&#34;https://go.documentation.sas.com/doc/en/pgmsascdc/v_031/grstatproc/n1h6n82pw2uqo6n10avwmph63r7o.htm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;lineparm&lt;/a&gt; statements corresponding to our different samples into the SGPLOT statement. Lastly, use the 
&lt;a href=&#34;https://go.documentation.sas.com/doc/en/pgmsascdc/v_031/grstatproc/n0n6uml63c6h8dn16phbd1arm9g9.htm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;xaxis&lt;/a&gt; and 
&lt;a href=&#34;https://go.documentation.sas.com/doc/en/pgmsascdc/v_031/grstatproc/n0n6uml63c6h8dn16phbd1arm9g9.htm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;yaxis&lt;/a&gt; statements to focus the graph on the scatter plot data, and not forcing the x-intercepts of the different fitted lines into&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sas&#34;&gt;proc sgplot data=&amp;amp;ds. noautolegend;
  scatter x=x y=y;
  %do i = 1 %to &amp;amp;n.;
    lineparm x=0 y=%scan(&amp;amp;intercepts, &amp;amp;i, &#39; &#39;) 
         slope=%scan(&amp;amp;slopes, &amp;amp;i, &#39; &#39;) / transparency=0.7;
  %end;

  xaxis min=&amp;amp;minx. max=&amp;amp;maxx.;
  yaxis min=&amp;amp;miny. max=&amp;amp;maxy.;
run;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;calling-the-macro&#34;&gt;Calling the Macro&lt;/h2&gt;
&lt;p&gt;And that&amp;rsquo;s it. Assuming we declared the macro as follows&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sas&#34;&gt;%macro sample_regression(ds=, posterior=, n=);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;we can now call it.&lt;/p&gt;
&lt;p&gt;As a particular example, let&amp;rsquo;s run PROC MCMC&amp;rsquo;s getting started example 1 straight from 
&lt;a href=&#34;https://github.com/sassoftware/doc-supplement-statug/blob/main/Examples/m-n/mcmcgs1.sas&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sas&#34;&gt;filename url gs1 &#39;https://raw.githubusercontent.com/sassoftware/doc-supplement-statug/main/Examples/m-n/mcmcgs1.sas&#39;;
%include gs1;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this example, we predict weight based on height in the &lt;code&gt;sashelp.class&lt;/code&gt; data set. The posterior samples are available as &lt;code&gt;work.classout&lt;/code&gt;. We&amp;rsquo;ll want to rename the height and weight variables to $x$ and $y$ in order to work with the chosen macro names. This is easily accomplished by using the &lt;code&gt;rename&lt;/code&gt; statement in the macro call itself. We&amp;rsquo;ll call it with $n=15$.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sas&#34;&gt;%sample_regression(ds=sashelp.class(rename=(Height=x Weight=y)),
                  posterior=work.classout,
                  n=15);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will produce the following output:&lt;/p&gt;





  
  











&lt;figure &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://dmsenter89.github.io/post/23-05-sample-regression-lines/class-regression-sample_hu8718c9b6d2106aec942f1d2ab5f5552b_53162_2000x2000_fit_lanczos_2.png&#34; &gt;


  &lt;img data-src=&#34;https://dmsenter89.github.io/post/23-05-sample-regression-lines/class-regression-sample_hu8718c9b6d2106aec942f1d2ab5f5552b_53162_2000x2000_fit_lanczos_2.png&#34; class=&#34;lazyload&#34; alt=&#34;&#34; width=&#34;640&#34; height=&#34;480&#34;&gt;
&lt;/a&gt;



&lt;/figure&gt;

&lt;p&gt;With slight modifications you can also use this macro to help you refine your priors. By using the&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sas&#34;&gt;model general(0);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;statement in PROC MCMC in lieu of a regular model you will get estimates of the prior parameters. See the 
&lt;a href=&#34;https://go.documentation.sas.com/doc/en/pgmsascdc/v_031/statug/statug_mcmc_examples01.htm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;documentation&lt;/a&gt; for examples.&lt;/p&gt;
&lt;!-- 
```sas sample-regression.sas
/*
 * This code was generated for the blog post &#34;Sampling Regression Lines&#34;
 * available at dmsenter89.github.io/post/23-05-sample-regression-lines/
 *
 * Author: Michael Senter, PhD
 */

&lt;&lt;&lt;macro-first-line&gt;&gt;&gt;
&lt;&lt;&lt;srs&gt;&gt;&gt;

&lt;&lt;&lt;parameter-list&gt;&gt;&gt;

&lt;&lt;&lt;lineparm&gt;&gt;&gt;
%mend sample_regression;

&lt;&lt;&lt;mcmc-gs1&gt;&gt;&gt;

&lt;&lt;&lt;macro-call&gt;&gt;&gt;
```
--&gt;
</description>
    </item>
    
  </channel>
</rss>
