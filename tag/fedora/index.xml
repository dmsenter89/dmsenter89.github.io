<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>fedora | Michael&#39;s Site</title>
    <link>https://dmsenter89.github.io/tag/fedora/</link>
      <atom:link href="https://dmsenter89.github.io/tag/fedora/index.xml" rel="self" type="application/rss+xml" />
    <description>fedora</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Mon, 18 Dec 2023 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://dmsenter89.github.io/images/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>fedora</title>
      <link>https://dmsenter89.github.io/tag/fedora/</link>
    </image>
    
    <item>
      <title>Automatic Suspend in Fedora 38</title>
      <link>https://dmsenter89.github.io/post/23-12-automatic-suspend-in-fedora-38/</link>
      <pubDate>Mon, 18 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://dmsenter89.github.io/post/23-12-automatic-suspend-in-fedora-38/</guid>
      <description>&lt;p&gt;For a while now I&amp;rsquo;ve recycled an old iMac running Fedora Workstation as a simple homeserver. It&amp;rsquo;s been working well in the past, but just now with the EOL of Fedora 37 did I get around to updating from Fedora 36 to Fedora 38.&lt;/p&gt;
&lt;p&gt;Unfortuantely for my use case, there is an unannounced change in Gnome&amp;rsquo;s powersettings when moving to Fedora 38 from 37. See the 
&lt;a href=&#34;https://discussion.fedoraproject.org/t/gnome-suspends-after-15-minutes-of-user-inactivity-even-on-ac-power/79801&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;fedora forum&lt;/a&gt; for a description of the issue and a suggested fix. Unforunately, for me at least, the suggested fix doesn&amp;rsquo;t work and my system would still suspend, even with it disabled via the suggested commands. I had to use gsettings directly from my user account in addition to the the linked fix to get it to work and persist.&lt;/p&gt;
&lt;p&gt;Only a couple of weeks after getting this fixed, that workstation suffered a hard drive failure that caused it to become unbootable. I have sinced scrapped that workstation and bought a 
&lt;a href=&#34;https://www.bee-link.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Beelink&lt;/a&gt; mini-pc for about $200. I&amp;rsquo;m running Arch Linux on it.&lt;/p&gt;
&lt;p&gt;I had previously used Arch extensively as my daily driver and for various other machines, and never had problems with. My recent Fedora experience really drove me back to committing to Arch. Does Arch take longer to install and set up than Fedora? Sure. But it&amp;rsquo;s well documented and you actually understand the system you have and what packages are on it. It&amp;rsquo;s actually a transparent system, unlike the convenience-packaged distros with all their preinstalled stuff. You see so many people online worried about Arch not being &amp;ldquo;stable,&amp;rdquo; but in over ten years with different desktops and laptops running on Arch I haven&amp;rsquo;t had any major issues. Truth be told, I&amp;rsquo;ve had fewer issues with Arch than in the past five years with Ubuntu and Fedora systems.&lt;/p&gt;
&lt;p&gt;A particular example of something nice about Arch Linux: I have a ten year old workstation running on Arch that hadn&amp;rsquo;t booted in 4 years. The only difficulty in getting it up and running again was updating the archlinux-keyring for pacman. That didn&amp;rsquo;t take long and was well-documented. Since then, it&amp;rsquo;s humming along great with more up-to-date software than recent Ubuntu releases. Updating Fedora from 36 to 38 on the other hand was much more of a hassle. I had multiple reboots, hunting for what default packages changed, what changed without being documented, etc. My older Arch system got up and running in no time after scanning through the Arch Linux news for any required manual interventions that popped up in the past few years. Arch for the win.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Setup an Arbitrary WSL2 Distro</title>
      <link>https://dmsenter89.github.io/post/22-11-setup-an-arbitrary-wsl2-distro/</link>
      <pubDate>Mon, 14 Nov 2022 22:34:25 -0500</pubDate>
      <guid>https://dmsenter89.github.io/post/22-11-setup-an-arbitrary-wsl2-distro/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://learn.microsoft.com/en-us/windows/wsl/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Windows Subsystem for Linux&lt;/a&gt; (WSL) is an important part of my daily work flow. Unfortunately, the main distro supplied by Windows
is Ubuntu, which - for a variety of reasons - is not exactly my favorite distro. Luckily, WSL2 allows you to import an arbitrary Linux distro
to use instead. I got the idea from 
&lt;a href=&#34;https://dev.to/bowmanjd/install-fedora-on-windows-subsystem-for-linux-wsl-4b26&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;an article (Dev.to)&lt;/a&gt;
by Jonathan Bowman explaining how to get Fedora up and running in WSL2. This article summarizes the
key points of Bowman&amp;rsquo;s post and includes information for my long time daily driver, 
&lt;a href=&#34;https://archlinux.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Arch Linux&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The short of it is that you can import a root filesystem tarball into WSL2 from Windows terminal
using the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;wsl --import &amp;lt;distro-name&amp;gt; &amp;lt;distro-target-location&amp;gt; &amp;lt;path-to-tarball&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once imported, you can launch into your distro using &lt;code&gt;wsl -d &amp;lt;distro-name&amp;gt;&lt;/code&gt;. The only question is
how to get the root filesystem for this import step.&lt;/p&gt;
&lt;p&gt;There are two options we can go with: using a pre-fabricated root filesystem (rootfs), or creating our own
using Docker.&lt;/p&gt;
&lt;h2 id=&#34;using-an-existing-root-filesystem&#34;&gt;Using an Existing Root Filesystem&lt;/h2&gt;
&lt;p&gt;Some distros publish these. For Arch Linux, you can find them on 
&lt;a href=&#34;https://gitlab.archlinux.org/archlinux/archlinux-docker/-/releases&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitLab&lt;/a&gt;.
Two main images are available: base and base-devel. The latter has the base-devel 
&lt;a href=&#34;https://archlinux.org/groups/x86_64/base-devel/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;package group&lt;/a&gt; pre-installed.&lt;/p&gt;
&lt;p&gt;For Fedora, you can head over to 
&lt;a href=&#34;https://github.com/fedora-cloud/docker-brew-fedora/tree/37/x86_64&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt;
to get a copy of the rootfs. Note that for Fedora, the rootfs is merely part of the repo and not a separate release
page. You&amp;rsquo;ll be able to pick your base version of Fedora by switching branches in the repository.&lt;/p&gt;
&lt;p&gt;These rootfs images are usually compressed. Before you can use them with WSL2, the tarball needs to be extracted.
The Arch Linux rootfs can be extracted with zstd and the Fedora rootfs can be extracted using 7z.&lt;/p&gt;
&lt;h2 id=&#34;making-your-own-root-filesystem&#34;&gt;Making your Own Root Filesystem&lt;/h2&gt;
&lt;p&gt;Docker allows you to export a container to a root filesystem tarball:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;docker export -o &amp;lt;rootfs-name&amp;gt;.tar &amp;lt;container-or-image-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The neat thing here is that you can use either an image or a container name.&lt;/p&gt;
&lt;p&gt;Arch Linux images are available from 
&lt;a href=&#34;https://hub.docker.com/_/archlinux&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DockerHub&lt;/a&gt;. Available
tags include the above mentioned base and base-devel. Fedora is also available on 
&lt;a href=&#34;https://hub.docker.com/_/fedora&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DockerHub&lt;/a&gt;
and its tags include version numbers (e.g., 37 or 36).&lt;/p&gt;
&lt;h2 id=&#34;additional-setup&#34;&gt;Additional Setup&lt;/h2&gt;
&lt;p&gt;Once you have imported the distro you only have a barebones system available. Likely only the root user is
available, which is not ideal. You&amp;rsquo;ll want to install the packages you want to use and set up your own
user in addition to root. If you are building your own rootfs using Docker, you can build everything
interactively in your container by running &lt;code&gt;docker run -it &amp;lt;image-name&amp;gt;:&amp;lt;tag&amp;gt;&lt;/code&gt; to drop into a
shell and do all your setup there. Alternatively, you can create a Dockerfile with the basic setup
and build an image from that.&lt;/p&gt;
&lt;h3 id=&#34;arch-linux&#34;&gt;Arch Linux&lt;/h3&gt;
&lt;p&gt;Pacman won&amp;rsquo;t work out-of-the-box because it doesn&amp;rsquo;t ship with keys. You&amp;rsquo;ll need to run &lt;code&gt;pacman-keys --init&lt;/code&gt;
first. Install your favorite software using pacman, e.g.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pacman -Syu exa htop vim
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;User management and other common setup tasks are covered in the Arch Wiki&amp;rsquo;s 
&lt;a href=&#34;https://wiki.archlinux.org/title/General_recommendations#System_administration&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;General Recommendations&lt;/a&gt;.
Key tasks include 
&lt;a href=&#34;https://wiki.archlinux.org/title/Users_and_groups#User_management&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;adding a new user&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;useradd -m -G wheel $username
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;fedora&#34;&gt;Fedora&lt;/h3&gt;
&lt;p&gt;Make sure to run &lt;code&gt;dnf upgrade&lt;/code&gt; to get the latest version of your packages.
You may need to install either the &lt;code&gt;util-linux&lt;/code&gt; or &lt;code&gt;util-linux-core&lt;/code&gt; packages in order to get
the mount command working (used by WSL to mount the Windows filesystem). To be
able to add a non-root user with a password you&amp;rsquo;ll need to make sure that &lt;code&gt;passwd&lt;/code&gt; is installed.&lt;/p&gt;
&lt;p&gt;To add a non-root user in Fedora, use&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;useradd -G wheel $username 
passwd $username  # in interactive mode, you&#39;ll type in your password here
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;general-case&#34;&gt;General Case&lt;/h3&gt;
&lt;p&gt;In order to actually start the WSL instance as your non-root user, you&amp;rsquo;ll need
to edit &lt;code&gt;/etc/wsl.conf&lt;/code&gt; inside of your distro. If the user section doesn&amp;rsquo;t exist
yet, you can just run&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;echo -e &amp;quot;\n[user]\ndefault = ${username}\n&amp;quot; &amp;gt;&amp;gt; /etc/wsl.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Those are the basics to get you up and running. Not everything will necessarily
work smoothly out-of-the box as you may be missing some packages that you&amp;rsquo;re not
aware of until you need them, but overall I&amp;rsquo;ve had a positive experience with this
setup.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
