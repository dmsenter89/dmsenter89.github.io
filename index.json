[{"authors":["admin"],"categories":null,"content":"Fluid dynamics modeling and simulations, data analysis, and machine learning have been the major themes of Michael\u0026rsquo;s academic endeavors. The throughline of his career has been the utilization of coding to solve computationally complex problems.\nMichael enjoys mentoring and teaching. His teaching philosophy is based on his own experience - that a passion for math and computer science can be cultivated through active learning and emphasizing small victories.\nMichael is originally from Nuremberg, Germany where he attended the Neues Gymnasium Nuernberg, a school following the humanist tradition of education. He now lives in Carrboro with his family, where he enjoys travelling, collecting books, and reading nerdy webcomics in his spare time.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://dmsenter89.github.io/author/d.-michael-senter/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/d.-michael-senter/","section":"authors","summary":"Fluid dynamics modeling and simulations, data analysis, and machine learning have been the major themes of Michael\u0026rsquo;s academic endeavors. The throughline of his career has been the utilization of coding to solve computationally complex problems.","tags":null,"title":"D. Michael Senter","type":"authors"},{"authors":["D. Michael Senter","Dylan Ray Douglas","W. Christopher Strickland","Steven G. Thomas","Anne M Talkington","Laura Miller"],"categories":[],"content":"","date":1596468475,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1596468475,"objectID":"f53c5f8137d2c17ac968dc30b8fb6a58","permalink":"https://dmsenter89.github.io/publication/senter-2020-meshmerizeme/","publishdate":"2020-08-05T11:27:55-04:00","relpermalink":"/publication/senter-2020-meshmerizeme/","section":"publication","summary":"Numerous fluid-structure interaction problems in biology have been investigated using the immersed boundary method. The advantage of this method is that complex geometries, e.g., internal or external morphology, can easily be handled without the need to generate matching grids for both the fluid and the structure. Consequently, the difficulty of modeling the structure lies often in discretizing the boundary of the complex geometry (morphology). Both commercial and open source mesh generators for finite element methods have long been established; however, the traditional immersed boundary method is based on a finite difference discretization of the structure. Here we present a software library for obtaining finite difference discretizations of boundaries for direct use in the 2D immersed boundary method. This library provides tools for extracting such boundaries as discrete mesh points from digital images. We give several examples of how the method can be applied that include passing flow through the veins of insect wings, within lymphatic capillaries, and around starfish using open-source immersed boundary software.","tags":[],"title":"A semi-automated finite difference mesh creation method for use with immersed boundary software IB2d and IBAMR","type":"publication"},{"authors":[],"categories":null,"content":"This workshop covers data acquisition and basic data preparation with a focus on using Python with Jupyter Notebooks. To avoid having to install Python locally during the workshop, we will be utilizing an Azure notebook project. The example files are located here.\nPlease note that the free Azure notebooks will only be available until early October. To continue using Python and Jupyter notebooks, you may want to consider using a local installation. For Windows and Mac users, I recommend using Anaconda. For continued cloud usage, you may consider Cocalc. Please note that you will need a subscription for your Cocalc notebooks to be able to download data from external sources.\nAdditional Links:\n  Engauge Digitizer (software to extract data points from graphs).  Markdown Cheatsheet.  ","date":1596128400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1596128400,"objectID":"80d634f592a1f22b7ec5837df0dace9d","permalink":"https://dmsenter89.github.io/talk/webscraping-tutorial/","publishdate":"2020-07-27T14:10:17-04:00","relpermalink":"/talk/webscraping-tutorial/","section":"talk","summary":"Data acquisition is a key step in research. In this workshop, we will consider how to effectively access publicly available data sets. We will discuss how to find and load data published in CSV/Excel formats.  We will learn how to use Pandas to parse HTML tables. We will discuss some best practises for data acquisition and storage.","tags":[],"title":"Basics of Web Scraping with Python","type":"talk"},{"authors":[],"categories":[],"content":"Basics of Web Scraping with Python Michael Senter\n Goals for Today  Understand what tools and methods are available.  Be able to create a new project using Python and Jupyter.  Be able to edit existing code snippets to gather data.    Python  easy to learn, reads like \u0026ldquo;pseudocode\u0026rdquo; widely used in a variety of fields many books, websites, etc. to help you learn  print(\u0026quot;Hello, world!\u0026quot;)   Data Sources  CSV/Excel Downloads  COVID Related Data  Johns Hopkins Dashboard The Johns Hopkins data is published on GitHub and is updated regularly.\n Using SAS filename outfile \u0026quot;~/import-data-nyt.sas\u0026quot;; /* download official SAS script to above filename */ proc http url=\u0026quot;https://raw.githubusercontent.com/sassoftware/covid-19-sas/master/Data/import-data-nyt.sas\u0026quot; method=\u0026quot;get\u0026quot; out=outfile; run; /* run the downloaded script */ %include \u0026quot;~/import-data-nyt.sas\u0026quot;; /* state and county level data are now in memory */  ","date":1596126600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1596126600,"objectID":"4e6dec377db9b7f6c1777b9311af259c","permalink":"https://dmsenter89.github.io/slides/webscraping-tutorial/","publishdate":"2020-07-30T12:30:00-04:00","relpermalink":"/slides/webscraping-tutorial/","section":"slides","summary":"Basics of Web Scraping with Python Michael Senter\n Goals for Today  Understand what tools and methods are available.  Be able to create a new project using Python and Jupyter.","tags":[],"title":"Webscraping Tutorial","type":"slides"},{"authors":[],"categories":[],"content":"My website is back up and running! Some incompatabilities between my old site and updates to both Hugo and the Academic Theme have led to some downtime on this pageas I didn\u0026rsquo;t have time to look through how to rebuild my site without loosing previous content. I\u0026rsquo;m currently in the process of updating everything and will try to bring back some material as well. Stay tuned!\n","date":1595863867,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1595863867,"objectID":"92d904527521646e80dcda8e55bf841f","permalink":"https://dmsenter89.github.io/post/porting-forward/","publishdate":"2020-07-27T11:31:07-04:00","relpermalink":"/post/porting-forward/","section":"post","summary":"My website is back up and running! Some incompatabilities between my old site and updates to both Hugo and the Academic Theme have led to some downtime on this pageas I didn\u0026rsquo;t have time to look through how to rebuild my site without loosing previous content.","tags":[],"title":"Porting Forward","type":"post"},{"authors":[],"categories":null,"content":"","date":1587128400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1587128400,"objectID":"d4925dbe1b1b4dd4dad7517dcbe7fbcf","permalink":"https://dmsenter89.github.io/talk/thesis-proposal/","publishdate":"2020-04-15T08:00:00-04:00","relpermalink":"/talk/thesis-proposal/","section":"talk","summary":"","tags":[],"title":"Thesis Proposal","type":"talk"},{"authors":[],"categories":[],"content":"Insects are ubiquitious throughout the world. Most of us are familiar with winged insects such as butterflies and bees. Insect flight is an interesting topic from a biomechanics perspective. Unlike birds, most insects (with some eceptions, such as dragonflies and others) do not have flight muscles attached to their wings. Instead, their flight muscles oscillate their thorax, which in turn makes the wings move. The aerodynamics of insect flight are also very interesting. Larger insects are able to fly by creating a leading edge vortex. This method does not work in the smallest insect fliers. Such insects include the thrips and chalcid wasps, some of which have wingspans as small as 1 mm. These insects have unusual wing structures, as can be seen in this image:\nThe solid part of the wing is rather small and narrow, with many large bristles projecting from the solid part of the wing. Insects such as thrips do not create a leading edge vortex; instead, they fly using the \u0026ldquo;Clap-and-Fling\u0026rdquo; method. This method is common amongst insects who fly in the intermediate Reynolds number regime, $1\\leq \\mathrm{Re} \\leq 100$.\n","date":1527866603,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1527866603,"objectID":"047eb4aa355fddd02ce6989411f5488b","permalink":"https://dmsenter89.github.io/project/clap-and-fling/","publishdate":"2018-06-01T11:23:23-04:00","relpermalink":"/project/clap-and-fling/","section":"project","summary":"Simulating the aerodynamics of the smallest insect fliers.","tags":[],"title":"Clap and Fling","type":"project"},{"authors":[],"categories":[],"content":" IB2d and IBAMR are two software packages implementing the immersed boundary method (see below). These packages model fluid-structure interaction problems based on user given parameters and geometry. The manual creation of the initial geometry mesh can be difficult and time consuming, especially for the complex shapes encountered in biological applications. Oftentimes we have images of the geometry we wish to explore. I am developing software to help automate the creation of such CFD meshes for 2D simulations with a file-format suitable for use with IB2d and IBAMR from images. An initial prototype version is available on Github. A paper exploring the use of MeshmerizeMe in conjuction with IB2d for simulations is in preparation.\nUsage MeshmerizeMe needs two input files per experimental geometry: an SVG image file with the geometry of interest and an input2d file with the experiment parameters. When selecting an SVG for use with MeshmerizeMe it will automatically look for the input2d file in the same folder. It will then parse the paths, transform them into the correct coordinate system and appropriately sample the paths based on the size of the Cartesian grid set in the input2d file. The geometry will be exported as a vertex file. This file is readable by both IB2d and IBAMR.\nSVGs were chosen as the image source as the are an open, text-based format making them very accesible to work with. They are standardized for web use and many tools exist for creating and manipulating SVG images. They can be created from source images such as photographs or scans by means of edge detection tools and by manually tracing the outline of a shape of interest Consider optimizing the SVG prior to processing to save time.\nAs the current version of MeshmerizeMe only handles a subset of SVG, tools that optimize the SVG files created by your editor are very useful. Examples of such software include SVGO, which also offers a webapp called SVGOMG. Another software is svgcleaner.\nIBM Background One aspect of computational fluid dynamics is the investigation of fluid-structure interactions. One method developed for the study of such interactions is the immersed boundary method (IBM) developed by Peskin1. It is well known that fluids can be studied from both a Eulerian and a Lagrangian view. The IBM combines these - the domain of the problem is resolved as a Cartesian grid on which Eulerian equations are solved for fluid velocity and pressure. In the case of Newtonian fluids the incompressible Navier-Stokes equations comprising of\n$$ \\rho \\left( \\frac{\\partial \\mathbf{u}}{\\partial t} + \\mathbf{u} \\cdot \\nabla \\mathbf{u} \\right) = - \\nabla \\mathbf{p} + \\mu \\nabla^2 \\mathbf{u} + \\mathbf{f}$$\nand\n$$\\nabla \\cdot \\mathbf{u} = 0$$\nneed to be solved.\nThe immersed structures are modeled as fibers in the form of parametric curves $X(s,t)$, where $s$ is a parameter and $t$ is time. The fiber experiences force distributions $F(s,t)$, and we can derive the force the fiber exerts on the fluid from the momentum equation. For the fibers we then solve\n$$\\mathbf{f} = \\int_\\Gamma \\mathbf{F}(s,t),\\delta\\left(\\mathbf{x}-\\mathbf{X}(s,t)\\right),ds$$\nand\n$$\\frac{\\partial \\mathbf{X}}{\\partial t} = \\int_\\Omega \\mathbf{u}(\\mathbf{x},t), \\delta \\left( \\mathbf{x}-\\mathbf{X}(s,t)\\right),d\\mathbf{x}.$$\nHere, $\\Gamma$ is the immersed structure and $\\Omega$ is the fluid domain.\nThe immersed structures are discretized not on a Cartesian grid but on a separate Lagrangian grid on the fiber itself. Of import to CFD software users is that the initial discretization of the immersed structure has to be supplied by the user. While this is not too difficult for simple geometries, the often complex structures encountered in mathematical biology can present a significant time investment. This is the part where MeshmerizeMe comes in handy.\n  Charles S Peskin. 2002. \u0026ldquo;The immersed boundary method.\u0026rdquo; Acta numerica 11:479-517. \u0026#x21a9;\u0026#xfe0e;\n   ","date":1505921706,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1505921706,"objectID":"75d971656dea94655081afc1899e8ab1","permalink":"https://dmsenter89.github.io/project/meshmerizeme/","publishdate":"2017-09-20T11:35:06-04:00","relpermalink":"/project/meshmerizeme/","section":"project","summary":"Automatic mesh generation from 2D images for use with immersed boundary solvers.","tags":[],"title":"MeshmerizeMe","type":"project"},{"authors":["C Hohenegger","R Durr","DM Senter"],"categories":null,"content":"","date":1491004800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1491004800,"objectID":"424a48dfbcfb4647e011e675044fd04a","permalink":"https://dmsenter89.github.io/publication/hohenegger-2017-mean/","publishdate":"2020-07-27T15:40:59.097696Z","relpermalink":"/publication/hohenegger-2017-mean/","section":"publication","summary":"The motion of a passive spherical particle in a fluid has been widely described via a balance of force equations known as a Generalized Langevin Equation (GLE) where the covariance of the thermal force is related to the time memory function of the fluid. For viscous fluids, this relationship is simply a delta function in time, while for a viscoelastic fluid it depends on the constitutive equation of the fluid memory function. In this paper, we consider a general setting for linear viscoelasticity which includes both solvent and polymeric contributions, and a family of memory functions known as the generalized Rouse kernel. We present a statistically exact algorithm to generate paths which allows for arbitrary large time steps and which relies on the numerical evaluation of the covariance of the velocity process. As a consequence of the viscoelastic properties of the fluid, the particle exhibits subdiffusive behavior, which we verify as a function of the free parameters in the generalized Rouse kernel. We then numerically compute the mean first passage time of a passive particle through layers of different widths and establish that, for the generalized Rouse kernel, the mean first passage time grows quadratically with the layer’s width independently of the free parameters. Along the way, we also find the linear scaling of the mean first passage time for a layer of fixed width as a function of the particle’s radius.","tags":null,"title":"Mean first passage time in a thermally fluctuating viscoelastic fluid","type":"publication"}]